BUILD := build/

RACKET_VERSION := 7.8
RACKET_INPLACE := third-party/racket/racket/
INPLACE_LIB_DIR := $(RACKET_INPLACE)lib/
INPLACE_INCLUDE_DIR := $(RACKET_INPLACE)include/
INPLACE_BIN_DIR := $(RACKET_INPLACE)bin/
RACKET_INPLACE_FRAMEWORK := $(INPLACE_LIB_DIR)Racket.framework
INSTALL_DIR := $(BUILD)install/
INSTALL_LIB_DIR := $(INSTALL_DIR)lib/
INSTALL_FRAMEWORK_DIR := $(INSTALL_DIR)Frameworks/
INSTALL_BIN_DIR := $(INSTALL_DIR)bin/
RACKET_FRAMEWORK := $(INSTALL_FRAMEWORK_DIR)Racket.framework
RACKET_UNPATCHED_FRAMEWORK := $(INSTALL_FRAMEWORK_DIR)Racket-unpatched.framework
RACKET_MODULES_DIR := $(RACKET_FRAMEWORK)/Versions/$(RACKET_VERSION)_CS/Modules/
RACKET_HEADERS_DIR := $(RACKET_FRAMEWORK)/Versions/$(RACKET_VERSION)_CS/Headers/
RACKET_RESOURCES_DIR := $(RACKET_FRAMEWORK)/Versions/$(RACKET_VERSION)_CS/Resources/
RACKET_UMBRELLA := $(RACKET_HEADERS_DIR)Racket.h

RACKET_PKGS_DIR := third-party/racket/pkgs
RACKET_PKGS_CATALOG := $(BUILD)catalog

RACKET := $(INSTALL_BIN_DIR)racket
RACO := $(INSTALL_BIN_DIR)raco

REDLIB_DIR := src/libred/
REDLIB_BUILD := $(REDLIB_DIR)build/
REDLIB_FRAMEWORK := $(REDLIB_BUILD)RedLib.framework

.PHONY: all
all: install

.PHONY: clean
clean:
	rm -rf $(RACKET_FRAMEWORK)

$(RACKET_INPLACE_FRAMEWORK):
	cd third-party/racket && $(MAKE) cs RACKETCS_SUFFIX=""

$(RACKET_FRAMEWORK): $(RACKET_INPLACE_FRAMEWORK) $(RACKET_RESOURCES_DIR) $(RACKET_HEADERS_DIR) $(RACKET_MODULES_DIR)
	cp -R $(RACKET_INPLACE_FRAMEWORK)/ $(RACKET_FRAMEWORK)/
	cd $(RACKET_FRAMEWORK)/Versions && ln -sf $(RACKET_VERSION)_CS Current
	cd $(RACKET_FRAMEWORK) && ln -sf Versions/Current/Resources
	cd $(RACKET_FRAMEWORK) && ln -sf Versions/Current/Racket
	cd $(RACKET_FRAMEWORK) && ln -sf Versions/Current/Headers
	cd $(RACKET_FRAMEWORK)/Versions && ln -sf $(RACKET_VERSION)_CS A
	mkdir -p $(RACKET_MODULES_DIR)
	cp third-party/Racket-Info.plist $(RACKET_RESOURCES_DIR)Info.plist
	cp third-party/Racket-modules.modulemap $(RACKET_FRAMEWORK)/Versions/Current/Modules/
	cp third-party/Racket.h $(RACKET_UMBRELLA)
	install_name_tool -id @rpath/Racket.framework/Versions/7.8_CS/Racket $(RACKET_FRAMEWORK)/Racket

$(INSTALL_LIB_DIR) $(INSTALL_FRAMEWORK_DIR) $(INSTALL_INCLUDE_DIR) \
	$(REDLIB_BUILD) $(RACKET_MODULES_DIR) $(RACKET_HEADERS_DIR) $(RACKET_RESOURCES_DIR) \
	$(INSTALL_BIN_DIR):
	mkdir -p $@

RACKET_HEADERS := chezscheme.h racketcs.h racketcsboot.h
RACKET_HEADERS_DESTS := $(foreach h,$(RACKET_HEADERS),$(RACKET_HEADERS_DIR)$(h))

$(RACKET_FRAMEWORK): $(RACKET_HEADERS_DIR) $(RACKET_HEADERS_DESTS)

$(INSTALL_INCLUDE_DIR)%.h: $(RACKET_HEADERS_DIR)

$(RACKET_HEADERS_DIR)%.h: $(INPLACE_INCLUDE_DIR)%.h
	cp $< $(RACKET_HEADERS_DIR)

$(REDLIB_FRAMEWORK): $(RACKET_FRAMEWORK) $(REDLIB_BUILD) $(REDLIB_DIR)/CMakeLists.txt
	cd $(REDLIB_BUILD) && cmake .. && $(MAKE)

.PHONY: install
install: $(INSTALL_INCLUDE_DIR) $(INSTALL_LIB_DIR) $(INSTALL_FRAMEWORK_DIR) $(RACKET_FRAMEWORK) $(REDLIB_FRAMEWORK) \
	$(RACO) $(RACKET)

$(RACKET_PKGS_CATALOG): $(RACKET_INPLACE_FRAMEWORK)
	racket -l- pkg/dirs-catalog --link $@ $(RACKET_PKGS_DIR)

$(RACKET): $(INPLACE_BIN_DIR)racket $(INSTALL_BIN_DIR)
	cp -a $< $@

$(RACO): $(INPLACE_BIN_DIR)raco $(INSTALL_BIN_DIR)
	cp -a $< $@

